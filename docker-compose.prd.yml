version: '3.7'

volumes:
  proxy_certs:
  proxy_vhost:
  proxy_html:

services:
  app:
    restart: always
    command: bin/rails server -p 3000 -b '0.0.0.0'
    environment:
      RAILS_ENV: production
      RACK_ENV: production

  redis:
    restart: always

  selenium:
    restart: always

  server:
    restart: always
    environment:
      VIRTUAL_HOST: api.domain.com
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: api.domain.com
      LETSENCRYPT_EMAIL: email@domain.com

  proxy:
    image: jwilder/nginx-proxy:alpine
    restart: always
    networks:
      - frontend
      - backend
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      #- /home/${USER}/certs:/etc/nginx/certs
      - proxy_certs:/etc/nginx/certs:ro
      - proxy_vhost:/etc/nginx/vhost.d:ro
      - proxy_html:/usr/share/nginx/html:ro
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    restart: always
    networks:
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - proxy_certs:/etc/nginx/certs:rw
      - proxy_vhost:/etc/nginx/vhost.d:rw
      - proxy_html:/usr/share/nginx/html:rw
    depends_on:
      - proxy

  portainer:
    restart: always
    environment:
      VIRTUAL_HOST: portainer.domain.com
      VIRTUAL_PORT: 9000
      LETSENCRYPT_HOST: portainer.domain.com
      LETSENCRYPT_EMAIL: email@domain.com